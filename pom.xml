<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <!-- 项目的包 -->
  <groupId>com.yuntu.dpm</groupId>
  <!-- 项目的名字 -->
  <artifactId>dpm_curd</artifactId>
  <!-- 项目的版本号-->
  <version>0.0.1-SNAPSHOT</version>
  <!-- 打包的方式 -->
  <packaging>war</packaging>
	
	<!-- 用来引入项目的依赖架包（网络更新到本地架包存储仓库） -->
	<dependencies>
		<!-- 引入springmvc，spring -->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-webmvc</artifactId>
		    <version>4.3.18.RELEASE</version>
		</dependency>
		<!-- 引入spring的事务控制  spring jdbc -->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>4.3.18.RELEASE</version>
		</dependency>
		<!-- 引入spring的面向切面  spring Aspects -->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-aspects -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-aspects</artifactId>
		    <version>4.3.18.RELEASE</version>
		</dependency>
		<!-- 引入spring提供的测试模块 spring test(调用junit测试时，junit必须时4.12或以上版本 ) -->
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-test -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-test</artifactId>
		    <version>4.3.18.RELEASE</version>
		</dependency>
		<!-- 引入Mybatis -->		
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.4.6</version>
		</dependency>
		<!-- 引入Mybatis和spring的整合 mybatis spring -->
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>1.3.1</version>
		</dependency>
		<!-- 数据库连接池，驱动 采用 C3P0-->
		<!-- https://mvnrepository.com/artifact/com.mchange/c3p0 -->
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.5.2</version>
		</dependency>
		<!-- mysql驱动 -->
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
		    <version>8.0.16</version>
		</dependency>
		<!-- 引入jstl -->
		<!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
		<!-- https://mvnrepository.com/artifact/jstl/jstl -->
		<dependency>
		    <groupId>jstl</groupId>
		    <artifactId>jstl</artifactId>
		    <version>1.2</version>
		</dependency>
		<!-- 引用servlet-api -->
		<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>3.1.0</version>
		    <!-- provided:表明该包只在项目的编译和测试时使用（解决的时tomcat中也有servlet包的问题，避免包冲突） -->
		    <scope>provided</scope>
		</dependency>
		<!-- junit -->
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.12</version>
		</dependency>
		<!-- mybatis-generator-core 逆向工程（反向生成） -->		
		<!-- https://mvnrepository.com/artifact/org.mybatis.generator/mybatis-generator-core -->
		<dependency>
		    <groupId>org.mybatis.generator</groupId>
		    <artifactId>mybatis-generator-core</artifactId>
		    <version>1.3.5</version>
		</dependency>
		<!-- 引入PageHelper分页插件 -->
		<!-- 使用PageHelper只需要在classpath中包含pagehelper-x.x.x.jar和jsqlparser-x.x.x-jar -->
		<!-- https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper -->
		<dependency>
		    <groupId>com.github.pagehelper</groupId>
		    <artifactId>pagehelper</artifactId>
		    <version>5.0.0</version>
		</dependency>
		<!-- jackson json数据的传输 -->
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.9.5</version>
		</dependency>
		<!-- JSR303数据校验 -->
		<!-- 说明：
			tomcat7以上的服务器使用没有问题，可以直接导入hibernate-validator包
			tomcat7以下的服务器（el表达式版本过低），无法直接使用，需要给服务器的lib包文件中额外提供新的el表达式标准
		 -->
		 <!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
		<dependency>
		    <groupId>org.hibernate.validator</groupId>
		    <artifactId>hibernate-validator</artifactId>
		    <version>6.0.13.Final</version>
		</dependency>
		 
		
		
		
		
		
		
	</dependencies>
	
	
	
	

</project>